
//@skip-check module-structure-method-in-regions
&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	ЗагрузитьДанныеНаСервере();
КонецПроцедуры

//@skip-check module-structure-method-in-regions
&НаСервере
Процедура ЗагрузитьДанныеНаСервере()
	
	HTTPСоединение = Новый HTTPСоединение("localhost",,"Администратор");
	HTTPЗапрос = Новый HTTPЗапрос("/Posobie/odata/standard.odata/Document_Бронирования?$format=json"); 
	HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/json");
	
	HTTPОтвет = HTTPСоединение.ВызватьHTTPМетод("GET", HTTPЗапрос);  
	//@skip-check use-non-recommended-method
	Сообщить(HTTPОтвет.КодСостояния);
	
	ОтветСтрока = HTTPОтвет.ПолучитьТелоКакСтроку();   
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ОтветСтрока);
	ОтчетJSON = ПрочитатьJSON(ЧтениеJSON, Истина);  
	
	МассивДокументов = ОтчетJSON["value"]; 
	
		
	Для каждого ДокументJson из МассивДокументов Цикл  
		БронированияОбъект = Документы.Бронирования.СоздатьДокумент();
		БронированияОбъект.Дата = ПрочитатьДатуJSON(ДокументJson["Date"], ФорматДатыJSON.ISO); 
		БронированияОбъект.ДатаЗаезда = ПрочитатьДатуJSON(ДокументJson["ДатаЗаезда"], ФорматДатыJSON.ISO); 
		БронированияОбъект.ДатаВыезда = ПрочитатьДатуJSON(ДокументJson["ДатаВыезда"], ФорматДатыJSON.ISO);  
		//@skip-check unknown-method-property
		БронированияОбъект.Постояльцы = Справочники.Постояльцы.ПолучитьСсылку(Новый УникальныйИдентификатор(ДокументJson["Постояльцы_Key"]));
		БронированияОбъект.ТипНомера = Справочники.ТипыНомеров.ПолучитьСсылку(Новый УникальныйИдентификатор(ДокументJson["ТипНомера_Key"]));
		БронированияОбъект.ЗавтракВключен = ДокументJson["ЗавтракВключен"];	 
		БронированияОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЦикла;

	
КонецПроцедуры

//Получение данных Постояльцы
//@skip-check module-structure-method-in-regions
&НаКлиенте
Процедура ЗагрузитьСправочники(Команда)
	ЗагрузитьСправочникиНаСервере();
КонецПроцедуры

//@skip-check module-structure-method-in-regions
&НаСервере
Процедура ЗагрузитьСправочникиНаСервере()
	HTTPСоединение = Новый HTTPСоединение("localhost",,"Администратор");
	HTTPЗапрос = Новый HTTPЗапрос("/Posobie/odata/standard.odata/Catalog_Постояльцы?$format=json"); 
	HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/json");
	
	HTTPОтвет = HTTPСоединение.ВызватьHTTPМетод("GET", HTTPЗапрос);  
	//@skip-check use-non-recommended-method
	Сообщить(HTTPОтвет.КодСостояния);
	
	ОтветСтрока = HTTPОтвет.ПолучитьТелоКакСтроку();   
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ОтветСтрока);
	ОтчетJSON = ПрочитатьJSON(ЧтениеJSON, Истина);  
	
	МассивПостояльцев = ОтчетJSON["value"]; 
	
	Для каждого ПостояльцыJson из МассивПостояльцев Цикл 
		ПостояльцыОбъект = Справочники.Постояльцы.СоздатьЭлемент();
		ПостояльцыОбъект.УстановитьСсылкуНового(	
				Справочники.Постояльцы.ПолучитьСсылку(Новый УникальныйИдентификатор(ПостояльцыJson["Ref_Key"])));
		ПостояльцыОбъект.Наименование = ПостояльцыJson["Description"];
		ПостояльцыОбъект.Телефон = ПостояльцыJson["Телефон"];
		ПостояльцыОбъект.АдресЭлектроннойПочты = ПостояльцыJson["АдресЭлектроннойПочты"];   
		ПостояльцыОбъект.Пол = ПостояльцыJson["Пол"];
		ПостояльцыОбъект.ДатаРождения = ПрочитатьДатуJSON(ПостояльцыJson["ДатаРождения"], ФорматДатыJSON.ISO);
		ПостояльцыОбъект.Записать();
				
				
				
	КонецЦикла;
КонецПроцедуры


//Получение данных ТипыНомеров

//@skip-check module-structure-method-in-regions
&НаКлиенте
Процедура ЗагрузитьТипыНомеров(Команда)
	ЗагрузитьТипыНомеровНаСервере();
КонецПроцедуры

//@skip-check module-structure-method-in-regions
&НаСервере
Процедура ЗагрузитьТипыНомеровНаСервере()
	HTTPСоединение = Новый HTTPСоединение("localhost",,"Администратор");
	HTTPЗапрос = Новый HTTPЗапрос("/Posobie/odata/standard.odata/Catalog_ТипыНомеров?$format=json"); 
	HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/json");
	
	HTTPОтвет = HTTPСоединение.ВызватьHTTPМетод("GET", HTTPЗапрос);  
	//@skip-check use-non-recommended-method
	Сообщить(HTTPОтвет.КодСостояния);
	
	ОтветСтрока = HTTPОтвет.ПолучитьТелоКакСтроку();   
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ОтветСтрока);
	ОтчетJSON = ПрочитатьJSON(ЧтениеJSON, Истина);  
	
	МассивТипыНомеров = ОтчетJSON["value"]; 
	
	Для каждого ТипыНомеровJson из МассивТипыНомеров Цикл 
		ТипыНомеровОбъект = Справочники.ТипыНомеров.СоздатьЭлемент();
		ТипыНомеровОбъект.УстановитьСсылкуНового(	
				Справочники.ТипыНомеров.ПолучитьСсылку(Новый УникальныйИдентификатор(ТипыНомеровJson["Ref_Key"])));
		ТипыНомеровОбъект.Наименование = ТипыНомеровJson["Description"];
		ТипыНомеровОбъект.Цена = ТипыНомеровJson["Цена"];
		ТипыНомеровОбъект.Количество = ТипыНомеровJson["Количество"];   
		ТипыНомеровОбъект.Описание = ТипыНомеровJson["Описание"];
		ТипыНомеровОбъект.Записать(); 
	КонецЦикла;
КонецПроцедуры
